!obj:pylearn2.train.Train {
    dataset: &train !obj:parameter_prediction.datasets.timit.TIMIT {
        which_set: 'train'
    },
    model: !obj:pylearn2.models.mlp.MLP {
        nvis: 429,
        layers: [
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h0',
                     dim: 2000,
                     irange: 0.005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h1',
                     dim: 2000,
                     irange: 0.005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h2',
                     dim: 2000,
                     irange: 0.005,
                     max_col_norm: 1.9365,
                 },
                 !obj:pylearn2.models.mlp.Softmax {
                     max_col_norm: 1.9365,
                     layer_name: 'y',
                     n_classes: 183,
                     irange: .005
                 }
                ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .01,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: 0.5,
        },
        #learning_rule: !obj:pylearn2.training_algorithms.learning_rule.AdaDelta {
        #    decay: 0.95,
        #},
        monitoring_dataset:
            {
                #'train' : *train,
                #'valid' : !obj:parameter_prediction.datasets.timit.TIMIT {
                #              which_set: 'valid',
                #          },
                'test'  : !obj:parameter_prediction.datasets.timit.TIMIT {
                              which_set: 'test',
                          }
            },
        cost: !obj:pylearn2.costs.cost.SumOfCosts
            {
                costs: [
                    !obj:pylearn2.costs.mlp.Default {
                    },
                    !obj:pylearn2.costs.mlp.WeightDecay {
                        coeffs: [ 0.00005, 0.00005, 0.00005, 0.00005, ],
                    }
                    ]
            },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: 200
        },
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'test_y_misclass',
             save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}_best.pkl"
        },
    ],
    save_path: "${PYLEARN2_TRAIN_FILE_FULL_STEM}.pkl",
    save_freq: 1
}
